# Nginx configuration for leffe.work domain setup
# Main app: leffe.work / www.leffe.work
# API status: api.leffe.work
# Cockpit: server.leffe.work (already configured)

upstream audika_backend {
    server 127.0.0.1:3000;
    keepalive 64;
}

# API Status Dashboard (api.leffe.work)
server {
    listen 80;
    server_name api.leffe.work;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.leffe.work;
    
    # SSL certificates (will be added by certbot)
    # ssl_certificate /etc/letsencrypt/live/api.leffe.work/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/api.leffe.work/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # API Health Check & Status
    location / {
        # Redirect root to health check
        return 301 /health;
    }
    
    location /health {
        proxy_pass http://audika_backend/api/health/database;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints
    location /api {
        proxy_pass http://audika_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for API access
        add_header Access-Control-Allow-Origin "https://leffe.work" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        # Disable buffering for real-time
        proxy_buffering off;
        proxy_cache off;
    }
    
    # PM2 metrics endpoint (optional)
    location /metrics {
        # You can add PM2 metrics here if you set up pm2-runtime with metrics
        return 200 '{"status": "metrics endpoint", "app": "audika-sms"}';
        add_header Content-Type application/json;
    }
    
    # Basic status page
    location /status {
        default_type text/html;
        return 200 '<html>
        <head><title>API Status - Audika SMS</title></head>
        <body style="font-family: Arial; padding: 20px;">
            <h1>Audika SMS API Status</h1>
            <p>Server: api.leffe.work</p>
            <ul>
                <li><a href="/health">Database Health Check</a></li>
                <li><a href="/api/health/database">Full Health Status</a></li>
                <li><a href="/metrics">Metrics (if configured)</a></li>
            </ul>
            <hr>
            <p>Main Application: <a href="https://leffe.work">leffe.work</a></p>
            <p>Server Management: <a href="https://server.leffe.work:9090">Cockpit</a></p>
        </body>
        </html>';
    }
}

# Main Application (leffe.work & www.leffe.work)
server {
    listen 80;
    server_name leffe.work www.leffe.work;
    return 301 https://leffe.work$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.leffe.work;
    
    # SSL certificates
    # ssl_certificate /etc/letsencrypt/live/leffe.work/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/leffe.work/privkey.pem;
    
    # Redirect www to non-www
    return 301 https://leffe.work$request_uri;
}

server {
    listen 443 ssl http2;
    server_name leffe.work;
    
    # SSL certificates (will be added by certbot)
    # ssl_certificate /etc/letsencrypt/live/leffe.work/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/leffe.work/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logging
    access_log /var/log/nginx/audika-access.log;
    error_log /var/log/nginx/audika-error.log;
    
    # Max upload size (for file uploads)
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    
    # Root location - Next.js app
    location / {
        proxy_pass http://audika_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts for long-running requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Next.js static files with caching
    location /_next/static {
        proxy_pass http://audika_backend;
        proxy_cache_valid 365d;
        add_header Cache-Control "public, immutable, max-age=31536000";
    }
    
    # Next.js image optimization
    location /_next/image {
        proxy_pass http://audika_backend;
        proxy_cache_valid 60m;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # Public static files
    location /public {
        proxy_pass http://audika_backend;
        proxy_cache_valid 60m;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # API routes (no caching)
    location /api {
        proxy_pass http://audika_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for SSE/WebSocket
        proxy_buffering off;
        proxy_cache off;
        
        # Longer timeout for API calls
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # WebSocket support for hot reload in dev (remove in production)
    location /_next/webpack-hmr {
        proxy_pass http://audika_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }
    
    # Healthcheck endpoint
    location /health {
        access_log off;
        proxy_pass http://audika_backend/api/health/database;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}